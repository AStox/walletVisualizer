version: "3"
services:
  # client:
  #   container_name: client
  #   image: clientimg
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   ports:
  #     - 80:80
  #     - 443:443
  #   depends_on:
  #     - server
  #   environment:
  #     - WEB3_INFURA_PROJECT_ID=${WEB3_INFURA_PROJECT_ID}
  #     - ETHERSCAN_API_KEY=${ETHERSCAN_API_KEY}
  #   # volumes:
  #   #   - /home/ubuntu/ssl:/etc/nginx/certs

  # server:
  #   restart: always
  #   container_name: server
  #   build: ./server
  #   image: serverimg
  #   links:
  #     - redis
  #   # expose:
  #   #   - 5000
  #   volumes:
  #     - ./server:/usr/src/app
  #   # command: [/usr/src/app/start-gunicorn.sh]
  #   environment: &flaskenv
  #     - FLASK_ENV=development
  #     - FLASK_APP=app.py
  #     - FLASK_DEBUG=1
  #     - REDIS_HOST=redis
  #     - WEB3_INFURA_PROJECT_ID=${WEB3_INFURA_PROJECT_ID}
  #     - ETHERSCAN_API_KEY=${ETHERSCAN_API_KEY}

  redis:
    container_name: redis
    image: redis:latest
    restart: on-failure:10
    # ports:
    #   - 6379:6379
    # command: ["redis-server", "--loglevel", "verbose"]

  celery:
    container_name: celery
    image: serverimg
    # depends_on:
    #   - server
    restart: on-failure:10
    command: [./start-celery.sh]
    environment: &flaskenv
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - FLASK_DEBUG=1
      - REDIS_HOST=redis
      - WEB3_INFURA_PROJECT_ID=${WEB3_INFURA_PROJECT_ID}
      - ETHERSCAN_API_KEY=${ETHERSCAN_API_KEY}
    links:
      - redis
